// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.Command;
import frc.robot.subsystems.Intake;

public class AutoDriveIntake extends Command {
  /** Creates a new IntakeNote. */
  private Intake m_intake;

  public AutoDriveIntake(Intake intake) {
    m_intake = intake;
    
    addRequirements(intake);
  }

  // Called when the command is initially scheduled.
  @Override
  public void initialize() {}

  // Called every time the scheduler runs while the command is scheduled.
  @Override
  public void execute() {
    if(m_intake.launching && !m_intake.lastLaunching){
      m_intake.driveRoller(0.2); // if we want to launch the note move the note to the launch
    }
    else if(!m_intake.launching && m_intake.lastLaunching){
      m_intake.driveRoller(0); // if we stop launching stop the rollers
    }
    else if(m_intake.intaking && !m_intake.lastIntaking){
      m_intake.driveRoller(0.2); // if we start intaking start the roller motors
    }
    else if(!m_intake.intaking && m_intake.lastIntaking){
      m_intake.driveRoller(0); // if we stop intaking stop the roller motors
    }
    else if(m_intake.intaking && m_intake.backBeamBreak.get()){
      m_intake.driveRoller(0); // if we are intaking and the note gets to the back of the intake stop the roller motors
    }
    else if(m_intake.outtaking && !m_intake.lastOuttaking){
      m_intake.driveRoller(-0.2); // if we start outtaking reverse the roller motors
    }
    else if(!m_intake.outtaking && m_intake.lastOuttaking){
      m_intake.driveRoller(0); // if we stop outtaking stop the roller motors;
    }
  }

  // Called once the command ends or is interrupted.
  @Override
  public void end(boolean interrupted) {
    m_intake.driveRoller(0.0);
  }

  // Returns true when the command should end.
  @Override
  public boolean isFinished() {
    return false;
  }
}
